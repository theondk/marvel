{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","services/MarvelServices.js","hooks/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/comicsPage/ComicsPage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","components/charSearch/CharSearch.js","resources/img/vision.png","components/pages/charsPage/CharsPage.js","resources/img/error404.png","components/pages/404Page/Page404.js","components/pages/singleComicsPage/SingleComicsPage.js","components/pages/singleCharPage/SingleCharPage.js","components/pages/SinglePage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","exact","activeStyle","color","AppBanner","src","avengers","alt","avengersLogo","useMarvelServices","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","json","data","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_writeChar","getOneCharacter","id","getAllComics","_writeComics","getOneComics","getCharByName","name","title","price","prices","thumbnail","path","extension","description","pages","pageCount","language","textObjects","length","homepage","urls","wiki","comics","items","Spinner","style","display","justifyContent","alignItems","xmlns","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","errorGif","View","i","objectFit","ComicsList","setComics","setOffset","newComicsLoading","setNewComicsLoading","useEffect","onComicsLoad","then","onComicsLoaded","isLoading","isError","isLoaded","onClick","disabled","ComicsPage","Helmet","content","char","href","RandomChar","setChar","updateChar","Math","floor","random","onCharLoaded","mjolnir","CharList","props","chars","setChars","newCharsLoading","setNewCharsLoading","isEnd","setIsEnd","renderChars","onCharsListLoaded","toSelect","setSelectedChar","liRefs","useRef","selectedChar","idx","current","forEach","item","classList","remove","add","cards","CSSTransition","timeout","classNames","tabIndex","ref","el","onKeyPress","e","key","TransitionGroup","component","Skeleton","charComics","slice","comicsId","resourceURI","split","pop","CharInfo","isSkeleton","ErrorBoundary","state","errorInfo","this","setState","children","Component","CharSearch","found","setFound","isChar","isFound","initialValues","validationSchema","Yup","required","onSubmit","onLoaded","isSubmitting","onInput","placeholder","CharsPage","charId","setCharId","decoration","Page404","img404","SingleComicsPage","SingleCharPage","SinglePage","pageName","useParams","setData","onCharLoad","onDataLoaded","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6ea943b.chunk.js","sourcesContent":["import {Link, NavLink} from 'react-router-dom';\n\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to='/'>\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink exact activeStyle={{color: '#9F0013'}} to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink activeStyle={{color: '#9F0013'}} to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelServices = () => {\r\n    const {loading, error, request} = useHttp();\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=0969786fd5dd4d9e4cd0a47260474b70';\r\n    const _baseCharOffset = 210;\r\n    const _baseComicsOffset = 11;\r\n\r\n    const getAllCharacters = async (offset = _baseCharOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_writeChar);\r\n    }\r\n\r\n    const getOneCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _writeChar(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseComicsOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_writeComics);\r\n    }\r\n\r\n    const getOneComics = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _writeComics(res.data.results[0]);\r\n    }\r\n\r\n    const getCharByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n        return res.data.results[0];\r\n    }\r\n\r\n    const _writeComics = (res) => {\r\n        return {\r\n            id: res.id,\r\n            title: res.title,\r\n            price: res.prices[0].price,\r\n            thumbnail: res.thumbnail.path + '.' + res.thumbnail.extension,\r\n            description: res.description,\r\n            pages: res.pageCount,\r\n            language: res.textObjects.length ? res.textObjects[0].language : '' \r\n        }\r\n    }\r\n\r\n    const _writeChar = (res) => {\r\n        return {\r\n            id: res.id,\r\n            name: res.name,\r\n            description: res.description,\r\n            thumbnail: res.thumbnail.path + '.' + res.thumbnail.extension,\r\n            homepage: res.urls[0].url,\r\n            wiki: res.urls[1].url,\r\n            comics: res.comics.items\r\n        }\r\n    }\r\n\r\n    return {loading, error, request, getAllCharacters, getOneCharacter, getAllComics, getOneComics, getCharByName}\r\n}\r\n\r\nexport default useMarvelServices;","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type' : 'application/json'}) => {\r\n        setLoading(true);\r\n        setError(false);\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n        \r\n            if (!response.ok) {\r\n                throw new Error(`Can't fetch ${url}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(true);\r\n        }\r\n    }, []);\r\n\r\n    return { loading, error, request }\r\n}\r\n\r\nexport { useHttp };","const Spinner = () => {\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n                <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g><g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g><g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g><g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                </circle>\r\n                </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import errorGif from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n            <img src={errorGif} style={{height: '200px'}} alt=\"error\"></img>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\nimport useMarvelServices from '../../services/MarvelServices';\n\nimport './comicsList.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { Link } from 'react-router-dom';\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([]);\n    const [offset, setOffset] = useState(250);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelServices();\n    \n    useEffect(() => {\n        onComicsLoad();\n    }, []);\n\n    const onComicsLoad = () => {\n        getAllComics(offset)\n            .then(onComicsLoaded);\n    }\n\n    const onComicsLoaded = (items) => {\n        setComics(comics => [...comics, ...items]);\n        setOffset(offset => offset + 9);\n        setNewComicsLoading(false);\n    }\n\n    const isLoading = !(!loading || newComicsLoading) ? <Spinner/> : null;\n    const isError = error ? <ErrorMessage/> : null;\n    const isLoaded = comics ? <View comics={comics}/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {isLoading}\n            {isError}\n            {isLoaded}\n            <button onClick={() => {setNewComicsLoading(true); onComicsLoad()}} disabled={newComicsLoading} className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nconst View = ({comics}) => {\n    const items = comics.map(({title, id, price, thumbnail}, i) => {\n        return (\n            <li key={i} className=\"comics__item\">\n                <Link to={`comics/${id}`}>\n                    <img className=\"comics__img\" style={{objectFit: (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? 'contain' : 'cover')}} src={thumbnail} alt=\"ultimate war\" className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{title}</div>\n                    <div className=\"comics__item-price\">{price ? price : 'The price was not found'}</div>\n                </Link>\n            </li>\n        )\n    })\n\n    return (\n        <ul className=\"comics__grid\">\n            {items}\n        </ul>\n    )\n}\n\nexport default ComicsList;","import AppBanner from '../../appBanner/AppBanner';\r\nimport ComicsList from '../../comicsList/ComicsList';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Comics list\"\r\n                />\r\n                <title>Comics list</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>    \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import mjolnir from '../../resources/img/mjolnir.png';\nimport { useState, useEffect } from 'react';\nimport useMarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\n\nconst RandomChar = () => {\n    const [char, setChar] = useState({});\n\n    const {loading, error, getOneCharacter} = useMarvelServices();\n\n    useEffect(() => {\n        updateChar();\n    }, []);\n\n    const updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getOneCharacter(id)\n            .then(onCharLoaded);\n    }\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const onUpdate = () => {\n        updateChar();\n    }\n\n    const isLoading = loading ? <Spinner/> : null,\n          isError = error ? <ErrorMessage/> : null,\n          isLoaded = !(loading || error) ? <View char={char}/> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {isLoading}\n            {isError}\n            {isLoaded}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={onUpdate} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={{objectFit: (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? 'contain' : 'cover')}}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description === '' ? 'Description not found :(' : description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RandomChar;","import useMarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport { useState, useEffect, useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'; \n\nimport './charList.scss';\n\nconst CharList = (props) => {\n    const [chars, setChars] = useState([]);\n    const [newCharsLoading, setNewCharsLoading] = useState(false);\n    const [offset, setOffset] = useState(250);\n    const [isEnd, setIsEnd] = useState(false);\n\n    const {loading, error, getAllCharacters } = useMarvelServices();\n\n    useEffect(() => {\n        renderChars();\n    }, [])\n\n    const renderChars = () => {\n        getAllCharacters(offset)\n            .then(onCharsListLoaded);\n    }\n\n    const onCharsListLoaded = (items) => {\n        setChars(chars => [...chars, ...items]);\n        setNewCharsLoading(false);\n        setOffset(offset => offset + 9);\n        setIsEnd(!items.length ? true : false)\n    }\n\n    const onLoad = () => {\n        setNewCharsLoading(true);\n        renderChars();\n    }\n    \n    const isLoading = !(!loading || newCharsLoading) ? <Spinner/> : null,\n          isError = error ? <ErrorMessage/> : null,\n          isLoaded = !(isLoading || isError) ? <View chars={chars} toSelect={(id) => props.setSelectedChar(id)}/> : null;\n    return (\n        <div className=\"char__list\">\n            {isLoading}\n            {isError}\n            {isLoaded}\n            <button style={{display: isEnd ? 'none' : 'block'}} disabled={newCharsLoading} onClick={onLoad} className=\"button button__main button__long\">\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default CharList;\n\nconst View = ({chars, toSelect}) => {\n    const liRefs = useRef([]);\n\n    const selectedChar = (id, idx) => {\n        liRefs.current.forEach(item => {item.classList.remove('char__item_selected')});\n        liRefs.current[idx].classList.add('char__item_selected');\n        toSelect(id);\n    }\n\n    const cards = chars.map((item, i) => {\n        const {name, thumbnail, id} = item;\n            return (\n                <CSSTransition key={id} timeout={500} classNames=\"char__item\">\n                <li \n                    tabIndex=\"0\" \n                    ref={el => liRefs.current[i] = el}\n                    onClick={() => selectedChar(id, i)}\n                    className=\"char__item\"\n                    onKeyPress={(e) => {\n                        if (e.key === \"Enter\") {\n                            selectedChar(id, i);\n                        }\n                    }}\n                >\n                    <img src={thumbnail} alt=\"character\" style={{objectFit: (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? 'contain' : 'cover')}}/>\n                    <div className=\"char__name\">{name}</div>\n                </li>\n                </CSSTransition>\n            )\n        });\n\n    return (\n            <ul className=\"char__grid\">\n                <TransitionGroup component={null}>\n                    {cards}    \n                </TransitionGroup>\n            </ul>\n    );\n};","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import useMarvelServices from '../../services/MarvelServices';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharInfo = ({selectedChar}) => {\n    const [char, setChar] = useState(null);\n\n    const {loading, error, getOneCharacter} = useMarvelServices();\n    useEffect(() => {\n        if (selectedChar) {\n            setSelectedChar();\n        }\n    }, [selectedChar]);\n\n    const setSelectedChar = () => {\n        getOneCharacter(selectedChar)\n            .then(onCharLoaded);\n    }\n\n    const onCharLoaded = (res) => {\n        setChar(res);\n    }\n\n    const isSkeleton = !(char || loading || error) ? <Skeleton/> : null,\n          isLoaded = !(loading || error || !char) ? <View char={char}/> : null,\n          isLoading = loading === true ? <Spinner/> : null,\n          isError = error === true ? <ErrorMessage/> : null;\n    return (\n        <div className=\"char__info\">\n            {isSkeleton}\n            {isLoaded}\n            {isLoading}\n            {isError}\n        </div>\n    )\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    const charComics = comics.slice(0, 10).map(item => {\n        const comicsId = item.resourceURI.split('/').pop();\n        return(\n            <Link className=\"char__comics-item\" key={item.name} to={`/comics/${comicsId}`}>\n                {item.name}\n            </Link>\n        )\n    });\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt=\"character\"  style={{objectFit: (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ? 'contain' : 'cover')}}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description === '' ? 'The description was not found' : description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {charComics.length === 0 ? 'The comics were not found' : charComics}\n            </ul>  \n        </>\n    );\n};\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        new Error(error, errorInfo);\r\n\r\n        this.setState({error: true});\r\n    }\r\n\r\n    render(){\r\n        if (this.state.error === true) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Link } from 'react-router-dom';\r\nimport useMarvelServices from '../../services/MarvelServices';\r\nimport { useState } from 'react';\r\n\r\nimport './charSearch.scss';\r\n\r\nconst CharSearch = () => {\r\n    const [char, setChar] = useState({id: null, name: null});\r\n    const [found, setFound] = useState(null);\r\n    const {getCharByName} = useMarvelServices();\r\n    \r\n    const onLoaded = (res) => {\r\n        res ? setChar({id: res.id, name: res.name}) : setFound(false);\r\n    }\r\n\r\n    const isChar = char.id ? <Link to={`/character/${char.id}`} className=\"char__search-success\">`Visit {char.name} page...`</Link> : null;\r\n    const isFound = found === false ? <div className=\"char__search-success\">The character was not found...</div> : null;\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={{ name: '' }}\r\n                validationSchema={Yup.object({\r\n                    name: Yup.string()\r\n                            .required('Field is required')\r\n                })}\r\n                onSubmit={values => \r\n                    getCharByName(values.name)\r\n                        .then(res => onLoaded(res))\r\n                }\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form className=\"char__search\">\r\n                        <div className=\"char__search-title\">Or find a character by name:</div>\r\n                        <div className=\"char__search-wrapper\">\r\n                            <Field onInput={() => {setChar({id: null, name: null}); setFound(null)}} placeholder=\"Enter name\" className=\"char__search-input\" type=\"text\" name=\"name\" />\r\n                            <button disabled={isSubmitting} type=\"submit\" className=\"button button__main\">\r\n                                <div className=\"inner\">find</div>\r\n                            </button>\r\n                        </div>\r\n                        <ErrorMessage className=\"char__search-error\" name=\"name\" component=\"div\" />\r\n                        {isChar}\r\n                        {isFound}\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CharSearch;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import RandomChar from \"../../randomChar/RandomChar\";\r\nimport CharList from \"../../charList/CharList\";\r\nimport CharInfo from \"../../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../../errorBoundary/ErrorBoundary\";\r\nimport { useState } from \"react\";\r\nimport CharSearch from '../../charSearch/CharSearch';\r\n\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport decoration from '../../../resources/img/vision.png';\r\n\r\nconst CharsPage = () => {\r\n    const [charId, setCharId] = useState(null);\r\n    const setSelectedChar = (id) => {\r\n        setCharId(id);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel information portal\"\r\n                />\r\n                <title>Marvel information portal</title>\r\n            </Helmet>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList setSelectedChar={setSelectedChar}/>\r\n                </ErrorBoundary>\r\n                <div>\r\n                    <ErrorBoundary>\r\n                        <CharInfo selectedChar={charId}/>\r\n                    </ErrorBoundary>\r\n                    <CharSearch/>\r\n                </div>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default CharsPage;","export default __webpack_public_path__ + \"static/media/error404.f6d3a8b4.png\";","import img404 from '../../../resources/img/error404.png';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport './error404.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = ({title = 'Page'}) => {\r\n    return (\r\n        <div className=\"error404\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Marvel information portal\"\r\n                />\r\n                <title>Marvel information portal</title>\r\n            </Helmet>\r\n            <div className=\"error404__message\">\r\n                <h3 className=\"error404__name\">Error 404</h3>\r\n                <p className=\"error404__text\">{title} is not exist.</p>\r\n                <Link className=\"error404__link\" to='/'>Back to main page.</Link>\r\n            </div>\r\n            <img src={img404} alt=\"404image\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Page404;","import { Link } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport './singleComic.scss';\r\n\r\nconst SingleComicsPage = ({data}) => {\r\n    const {title, price, thumbnail, description, pages, language} = data;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Single comics\"\r\n                />\r\n                <title>{title}</title>\r\n            </Helmet>\r\n            <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description ? description : 'Description was not found'}</p>\r\n                <p className=\"single-comic__descr\">{pages !== 0 ? pages + ' pages' : 'Count of pages was not found'}</p>\r\n                <p className=\"single-comic__descr\">{language ? 'Language: ' + language : 'Language was not found'}</p>\r\n                <div className=\"single-comic__price\">{price ? price + '$' : 'Price was not found'}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicsPage;","import { Helmet } from 'react-helmet';\r\n\r\nimport './singleChar.scss';\r\n\r\nconst SingleCharPage = ({data}) => {\r\n    const {name, thumbnail, description} = data;\r\n\r\n    return (\r\n        <div className=\"single-char\">\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Single character\"\r\n                />\r\n                <title>{name}</title>\r\n            </Helmet>\r\n            <img src={thumbnail} alt=\"x-men\" className=\"single-char__img\"/>\r\n            <div className=\"single-char__info\">\r\n                <h2 className=\"single-char__name\">{name}</h2>\r\n                <p className=\"single-char__descr\">{description ? description : 'Description was not found'}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleCharPage;","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useMarvelServices from \"../../services/MarvelServices\";\r\nimport Spinner from \"../spinner/Spinner\";\r\nimport Page404 from \"./404Page/Page404\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({Component, pageName}) => {\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {loading, error, getOneCharacter, getOneComics} = useMarvelServices();\r\n    const isLoading = loading ? <Spinner/> : null;\r\n    const isError = error ? <Page404 title={'Comics'}/> : null;\r\n    const isLoaded = !(loading || error || !data) ? <Component data={data}/> : null; \r\n\r\n    useEffect(() => {\r\n        onCharLoad();\r\n    }, [id]);\r\n\r\n    const onCharLoad = () => {\r\n        switch (pageName) {\r\n            case 'char':\r\n                getOneCharacter(id)\r\n                    .then(onDataLoaded);\r\n                break;\r\n            case 'comics':\r\n                getOneComics(id)\r\n                    .then(onDataLoaded);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (item) => {\r\n        setData(item);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {isLoading}\r\n            {isError}\r\n            {isLoaded}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SinglePage;","import AppHeader from \"../appHeader/AppHeader\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport {ComicsPage, CharsPage, Page404, SingleComicsPage, SingleCharPage, SinglePage} from '../pages';\n\nconst App = () => {\n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <Switch>\n                    <Route exact path='/'>\n                        <CharsPage/>\n                    </Route>\n                    <Route exact path='/comics'>\n                        <ComicsPage/>\n                    </Route>\n                    <Route path='/comics/:id'>\n                        <SinglePage Component={SingleComicsPage} pageName=\"comics\"/>\n                    </Route>\n                    <Route path='/character/:id'>\n                        <SinglePage Component={SingleCharPage} pageName=\"char\"/>\n                    </Route>\n                    <Route path='*'>\n                        <Page404/>\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}